#!/bin/bash

echo "=== Valida√ß√£o de Arquivos Docker Compose ==="

COMPOSE_FILE="docker-compose.base-nginx.yml"
EXIT_CODE=0

# Verificar se arquivo existe
if [ ! -f "$COMPOSE_FILE" ]; then
    echo "‚ùå $COMPOSE_FILE n√£o encontrado!"
    EXIT_CODE=1
fi

# Verificar se arquivo n√£o est√° vazio
if [ ! -s "$COMPOSE_FILE" ]; then
    echo "‚ùå $COMPOSE_FILE est√° vazio!"
    EXIT_CODE=1
fi

# Verificar se cont√©m se√ß√£o services
if [ -f "$COMPOSE_FILE" ] && ! grep -q '^services:' "$COMPOSE_FILE"; then
    echo "‚ùå $COMPOSE_FILE n√£o cont√©m se√ß√£o 'services'!"
    EXIT_CODE=1
fi

# Validar sintaxe YAML com docker-compose
if command -v docker-compose >/dev/null 2>&1; then
    echo "üîç Validando sintaxe YAML..."
    if ! docker-compose -f "$COMPOSE_FILE" config >/dev/null 2>&1; then
        echo "‚ùå $COMPOSE_FILE cont√©m erros de sintaxe YAML!"
        EXIT_CODE=1
    else
        echo "‚úÖ Sintaxe YAML v√°lida"
    fi
else
    echo "‚ö†Ô∏è  docker-compose n√£o encontrado, pulando valida√ß√£o de sintaxe"
fi

# Verificar servi√ßos essenciais
REQUIRED_SERVICES=("web" "db" "nginx")
for service in "${REQUIRED_SERVICES[@]}"; do
    if ! grep -q "^  $service:" "$COMPOSE_FILE"; then
        echo "‚ùå Servi√ßo '$service' n√£o encontrado em $COMPOSE_FILE!"
        EXIT_CODE=1
    else
        echo "‚úÖ Servi√ßo '$service' encontrado"
    fi
done

if [ $EXIT_CODE -eq 0 ]; then
    echo "‚úÖ Todos os arquivos Docker Compose s√£o v√°lidos!"
else
    echo "‚ùå Problemas encontrados nos arquivos Docker Compose!"
    echo "üîß Para corrigir, execute: git fetch origin main && git reset --hard origin/main"
fi

exit $EXIT_CODE
