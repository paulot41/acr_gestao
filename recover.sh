#!/bin/bash

echo "=== Script de Recupera√ß√£o ACR Gest√£o ==="

COMPOSE_FILE="docker-compose.base-nginx.yml"
BACKUP_DIR="backups"

# Fun√ß√£o para restaurar do Git
restore_from_git() {
    echo "üîÑ Restaurando $COMPOSE_FILE do reposit√≥rio Git..."
    git fetch origin main
    git checkout origin/main -- "$COMPOSE_FILE"
    echo "‚úÖ $COMPOSE_FILE restaurado do Git"
}

# Fun√ß√£o para restaurar do backup mais recente
restore_from_backup() {
    echo "üîç Procurando backup mais recente..."
    LATEST_BACKUP=$(ls -t "$BACKUP_DIR"/$COMPOSE_FILE.*.bak 2>/dev/null | head -n1)

    if [ -n "$LATEST_BACKUP" ]; then
        echo "üìÅ Backup encontrado: $LATEST_BACKUP"
        cp "$LATEST_BACKUP" "$COMPOSE_FILE"
        echo "‚úÖ $COMPOSE_FILE restaurado do backup"
        return 0
    else
        echo "‚ùå Nenhum backup encontrado"
        return 1
    fi
}

# Verificar se precisa de recupera√ß√£o
if [ -s "$COMPOSE_FILE" ] && grep -q '^services:' "$COMPOSE_FILE"; then
    echo "‚úÖ $COMPOSE_FILE est√° √≠ntegro, nenhuma recupera√ß√£o necess√°ria"
    exit 0
fi

echo "‚ö†Ô∏è  $COMPOSE_FILE est√° corrompido ou vazio, iniciando recupera√ß√£o..."

# Tentar restaurar do Git primeiro
if restore_from_git; then
    # Validar se a restaura√ß√£o funcionou
    if [ -s "$COMPOSE_FILE" ] && grep -q '^services:' "$COMPOSE_FILE"; then
        echo "‚úÖ Recupera√ß√£o do Git bem-sucedida!"
        exit 0
    fi
fi

# Se Git falhou, tentar backup
echo "‚ö†Ô∏è  Restaura√ß√£o do Git falhou, tentando backup..."
if restore_from_backup; then
    # Validar se a restaura√ß√£o funcionou
    if [ -s "$COMPOSE_FILE" ] && grep -q '^services:' "$COMPOSE_FILE"; then
        echo "‚úÖ Recupera√ß√£o do backup bem-sucedida!"
        exit 0
    fi
fi

echo "‚ùå Todas as tentativas de recupera√ß√£o falharam!"
echo "üÜò A√ß√£o manual necess√°ria:"
echo "   1. Verifique a conectividade com o reposit√≥rio Git"
echo "   2. Restaure manualmente de um backup conhecido"
echo "   3. Recrie o arquivo a partir de outro ambiente"
exit 1
