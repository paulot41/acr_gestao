services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: acrdb
      POSTGRES_USER: acruser
      POSTGRES_PASSWORD: acrpass
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U acruser -d acrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build:
      context: ./app
    env_file:
      - ./app/.env.prod
 #   ports:
  #    - "8000:8000"
    volumes:
      - media_data:/app/media
      - static_data:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  caddy:
    image: caddy:2
    depends_on:
      - web
    ports:
      - "80:80"
      # quando tivermos DNS, abrimos 443 tamb√©m:
      # - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped

volumes:
  db_data:
  media_data:
  static_data:
  caddy_data:
  caddy_config:
