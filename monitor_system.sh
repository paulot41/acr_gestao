#!/bin/bash

echo "=== Monitor ACR Gest√£o - Verifica√ß√£o Completa ==="
echo "$(date)"
echo ""

# Validar docker-compose.base-nginx.yml primeiro
if [ ! -s "docker-compose.base-nginx.yml" ] || ! grep -q '^services:' docker-compose.base-nginx.yml; then
    echo "‚ùå docker-compose.base-nginx.yml est√° vazio ou inv√°lido!"
    echo "üîß Execute: git fetch origin main && git reset --hard origin/main"
    exit 1
fi

echo "‚úÖ docker-compose.base-nginx.yml validado"
echo ""

echo "üîç STATUS DOS CONTAINERS:"
echo "=========================="
docker-compose -f docker-compose.base-nginx.yml ps
echo ""

echo "üåê TESTE DE CONECTIVIDADE:"
echo "=========================="
echo "HTTP (deve redirecionar 301):"
curl -I http://localhost 2>/dev/null | head -3 || echo "‚ùå HTTP n√£o responde"
echo ""
echo "HTTPS (certificado autoassinado):"
curl -k -I https://localhost 2>/dev/null | head -3 || echo "‚ùå HTTPS n√£o responde"
echo ""

echo "üìä LOGS DO NGINX (√∫ltimas 10 linhas):"
echo "====================================="
docker-compose -f docker-compose.base-nginx.yml logs nginx --tail=10
echo ""

echo "üêç LOGS DO DJANGO/WEB (√∫ltimas 15 linhas):"
echo "=========================================="
docker-compose -f docker-compose.base-nginx.yml logs web --tail=15
echo ""

echo "üóÑÔ∏è LOGS DA BASE DE DADOS (√∫ltimas 5 linhas):"
echo "============================================="
docker-compose -f docker-compose.base-nginx.yml logs db --tail=5
echo ""

echo "üî• √öLTIMAS REQUISI√á√ïES HTTP:"
echo "==========================="
docker-compose -f docker-compose.base-nginx.yml logs nginx --tail=20 | grep -E "(GET|POST|HEAD|PUT|DELETE)" | tail -10 || echo "Nenhuma requisi√ß√£o HTTP recente"
echo ""

echo "‚ö†Ô∏è ERROS RECENTES:"
echo "=================="
echo "Erros no Django:"
docker-compose -f docker-compose.base-nginx.yml logs web --tail=50 | grep -i "error\|exception\|traceback" | tail -5 || echo "Nenhum erro Django recente"
echo ""
echo "Erros no Nginx:"
docker-compose -f docker-compose.base-nginx.yml logs nginx --tail=50 | grep -i "error" | tail -5 || echo "Nenhum erro Nginx recente"
echo ""

echo "üíæ UTILIZA√á√ÉO DE RECURSOS:"
echo "=========================="
echo "Containers em execu√ß√£o:"
docker stats --no-stream --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}" $(docker-compose -f docker-compose.base-nginx.yml ps -q) 2>/dev/null || echo "N√£o foi poss√≠vel obter estat√≠sticas de recursos"
echo ""

echo "üîç HEALTH CHECKS:"
echo "=================="
WEB_HEALTH=$(docker-compose -f docker-compose.base-nginx.yml ps web | grep -o "(healthy\|health: starting\|unhealthy)" || echo "N/A")
DB_HEALTH=$(docker-compose -f docker-compose.base-nginx.yml ps db | grep -o "(healthy\|health: starting\|unhealthy)" || echo "N/A")
echo "Web: $WEB_HEALTH"
echo "DB: $DB_HEALTH"
echo ""

echo "‚úÖ RESUMO:"
echo "=========="
RUNNING_CONTAINERS=$(docker-compose -f docker-compose.base-nginx.yml ps --services | wc -l)
UP_CONTAINERS=$(docker-compose -f docker-compose.base-nginx.yml ps | grep "Up" | wc -l)

if [ "$UP_CONTAINERS" -eq 3 ]; then
    echo "‚úÖ Todos os servi√ßos est√£o em execu√ß√£o ($UP_CONTAINERS/3)"
    echo "üåê Acesse:"
    echo "   - HTTP: http://192.168.1.11 (deve redirecionar)"
    echo "   - HTTPS: https://192.168.1.11 (aceitar certificado)"
    echo "   - Admin: https://192.168.1.11/admin/"
else
    echo "‚ö†Ô∏è Alguns servi√ßos podem n√£o estar funcionando ($UP_CONTAINERS/3)"
fi

echo ""
echo "üìä Para monitoriza√ß√£o cont√≠nua:"
echo "   docker-compose -f docker-compose.base-nginx.yml logs -f"
echo ""
echo "üîÑ Para reiniciar se necess√°rio:"
echo "   docker-compose -f docker-compose.base-nginx.yml restart"
