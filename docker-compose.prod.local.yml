version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: acrdb
      POSTGRES_USER: acruser
      POSTGRES_PASSWORD: acrpass
    volumes:
      - dbdata_prod:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U acruser -d acrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "5432:5432"
    # Configurações otimizadas para performance
    command: >
      postgres -c max_connections=100
               -c shared_buffers=256MB
               -c effective_cache_size=512MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.9
               -c wal_buffers=16MB
               -c default_statistics_target=100

  web:
    build: .
    env_file:
      - .env.prod.local
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn acr_gestao.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    volumes:
      - ./nginx-prod.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  dbdata_prod:
