# Generated by Django 5.2.5 on 2025-09-03 15:02

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_product_created_at_product_description_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='person',
            name='address',
            field=models.TextField(blank=True, verbose_name='Morada'),
        ),
        migrations.AddField(
            model_name='person',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Criado em'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='person',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Data de Nascimento'),
        ),
        migrations.AddField(
            model_name='person',
            name='emergency_contact',
            field=models.CharField(blank=True, max_length=100, verbose_name='Contacto de Emergência'),
        ),
        migrations.AddField(
            model_name='person',
            name='last_activity',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Última Atividade'),
        ),
        migrations.AddField(
            model_name='person',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='clients/', verbose_name='Foto'),
        ),
        migrations.AddField(
            model_name='person',
            name='status',
            field=models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('suspended', 'Suspenso')], default='active', max_length=20),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor')),
                ('method', models.CharField(choices=[('cash', 'Dinheiro'), ('card', 'Cartão'), ('transfer', 'Transferência'), ('mbway', 'MB WAY'), ('other', 'Outro')], default='cash', max_length=20, verbose_name='Método')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('completed', 'Pago'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Estado')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Descrição')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Data de Vencimento')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.person')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=120, verbose_name='Apelido')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Telefone')),
                ('specialties', models.TextField(blank=True, verbose_name='Especialidades')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='instructors/', verbose_name='Foto')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
                'unique_together': {('organization', 'email')},
            },
        ),
        migrations.CreateModel(
            name='Modality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('default_duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Duração Padrão (min)')),
                ('max_capacity', models.PositiveIntegerField(default=10, verbose_name='Capacidade Máxima')),
                ('color', models.CharField(default='#0d6efd', help_text='Cor hexadecimal para o Gantt', max_length=7, verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criada em')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
            ],
            options={
                'verbose_name_plural': 'Modalities',
                'ordering': ['name'],
                'unique_together': {('organization', 'name')},
            },
        ),
    ]
