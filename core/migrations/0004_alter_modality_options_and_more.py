# Generated by Django 5.2.5 on 2025-09-03 23:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_person_address_person_created_at_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='modality',
            options={'ordering': ['entity_type', 'name'], 'verbose_name_plural': 'Modalities'},
        ),
        migrations.AddField(
            model_name='instructor',
            name='acr_commission_rate',
            field=models.DecimalField(decimal_places=2, default=60.0, help_text='Percentagem que o instrutor recebe por aulas ACR', max_digits=5, verbose_name='Comissão ACR (%)'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='entity_affiliation',
            field=models.CharField(choices=[('acr_only', 'Apenas ACR (Ginásio)'), ('proform_only', 'Apenas Proform (Pilates)'), ('both', 'ACR + Proform')], default='acr_only', help_text='Para que entidade(s) o instrutor trabalha', max_length=20, verbose_name='Afiliação'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='proform_commission_rate',
            field=models.DecimalField(decimal_places=2, default=70.0, help_text='Percentagem que o instrutor recebe por aulas Proform', max_digits=5, verbose_name='Comissão Proform (%)'),
        ),
        migrations.AddField(
            model_name='modality',
            name='entity_type',
            field=models.CharField(choices=[('acr', 'ACR (Ginásio)'), ('proform', 'Proform (Pilates/Wellness)'), ('both', 'Ambas')], default='acr', help_text='A que entidade esta modalidade pertence', max_length=20, verbose_name='Entidade'),
        ),
        migrations.AddField(
            model_name='modality',
            name='price_per_class',
            field=models.DecimalField(decimal_places=2, default=15.0, help_text='Preço base por aula desta modalidade', max_digits=8, verbose_name='Preço por Aula'),
        ),
        migrations.AddField(
            model_name='organization',
            name='gym_monthly_fee',
            field=models.DecimalField(decimal_places=2, default=30.0, max_digits=10, verbose_name='Mensalidade Ginásio (ACR)'),
        ),
        migrations.AddField(
            model_name='organization',
            name='org_type',
            field=models.CharField(choices=[('gym', 'Ginásio (ACR)'), ('wellness', 'Pilates/Wellness (Proform)'), ('both', 'Ambos (ACR + Proform)')], default='both', max_length=20, verbose_name='Tipo de Organização'),
        ),
        migrations.AddField(
            model_name='organization',
            name='wellness_monthly_fee',
            field=models.DecimalField(decimal_places=2, default=45.0, max_digits=10, verbose_name='Mensalidade Pilates (Proform)'),
        ),
        migrations.AddField(
            model_name='person',
            name='entity_affiliation',
            field=models.CharField(choices=[('acr_only', 'Apenas ACR (Ginásio)'), ('proform_only', 'Apenas Proform (Pilates)'), ('both', 'ACR + Proform')], default='acr_only', help_text='A que entidade(s) o cliente está inscrito', max_length=20, verbose_name='Afiliação'),
        ),
        migrations.CreateModel(
            name='InstructorCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Receita Total')),
                ('instructor_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Instrutor')),
                ('entity_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Entidade')),
                ('commission_rate', models.DecimalField(decimal_places=2, default=60.0, max_digits=5, verbose_name='Taxa Comissão (%)')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Pago')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Data Pagamento')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='core.event')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='core.instructor')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('instructor', 'event')},
            },
        ),
    ]
